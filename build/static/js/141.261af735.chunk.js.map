{"version":3,"file":"static/js/141.261af735.chunk.js","mappings":"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","sources":["Pages/MultiFileUpload.jsx","Pages/websocket.jsx","Pages/Home.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ZoomInIcon from '@mui/icons-material/ZoomIn';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport ExpandIcon from './../assets/images/expand.png'\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\nimport Generate from './../assets/images/generate.png'\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { \r\n  Card, \r\n  CardContent, \r\n  Typography, \r\n  Box, \r\n  Button, \r\n  Switch,\r\n  IconButton,\r\n  Grid,\r\n  Stack,\r\n  Paper,\r\n  Alert,\r\n  TextField,\r\n  Dialog,\r\n  DialogContent\r\n} from '@mui/material';\r\n\r\n\r\nconst MultiFileUpload = ({ handleData, load, handleClear, singlePage,buttonDisable,handleFullScreen, holdButton}) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [showThumbnail, setShowThumbnail] = useState(false);\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [enlargedImage, setEnlargedImage] = useState(null);\r\nconsole.log(singlePage,\"singlePage\")\r\n  useEffect(() => {\r\n    handleData(files);\r\n  }, [files, handleData]);\r\n\r\n  const isValidImageUrl = (url) => url.match(/\\.(jpeg|jpg|png)$/i);\r\n\r\n  const createFileFromUrl = async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      const blob = await response.blob();\r\n      const fileName = url.substring(url.lastIndexOf('/') + 1);\r\n      return new File([blob], fileName, { type: blob.type });\r\n    } catch (error) {\r\n      throw new Error('Invalid image URL');\r\n    }\r\n  };\r\n\r\n  const handleUrlPaste = async (e) => {\r\n\r\n    console.log(e?.target?.value,\"kkkkkkkkkkkkkkk\")\r\n    const url = e.target.value.trim();\r\n    setImageUrl(url);\r\nif (!e?.target?.value){\r\n  return\r\n}\r\n    // if (!url) return;\r\n\r\n    // if (!isValidImageUrl(url)) {\r\n    //   setError('Invalid image URL. Only JPG, JPEG, and PNG formats are supported.');\r\n    //   setTimeout(() => setError(''), 3000);\r\n    //   return;\r\n    // }\r\n\r\n    try {\r\n      const file = await createFileFromUrl(url);\r\n      if (isDuplicateFile(file)) {\r\n        setError(`Duplicate file: ${file.name}`);\r\n        setTimeout(() => setError(''), 3000);\r\n      } else {\r\n        setFiles((prevFiles) => [...prevFiles, file]);\r\n        setImageUrl('');\r\n      }\r\n    } catch (error) {\r\n      console.log(error,\"errorerror\")\r\n      setError('Unable to load image from URL. Please check the URL and try again.');\r\n      setTimeout(() => setError(''), 3000);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const isDuplicateFile = (newFile) =>\r\n    files.some((existingFile) => existingFile.name === newFile.name && existingFile.size === newFile.size);\r\n\r\n  const processFiles = (newFiles) => {\r\n    const duplicates = [];\r\n    const validFiles = [];\r\n\r\n    Array.from(newFiles).forEach((file) => {\r\n      if (isDuplicateFile(file)) {\r\n        duplicates.push(file.name);\r\n      } else {\r\n        validFiles.push(file);\r\n      }\r\n    });\r\n\r\n    if (duplicates.length > 0) {\r\n      setError(`Duplicate file(s) detected: ${duplicates.join(', ')}`);\r\n      setTimeout(() => setError(''), 3000);\r\n    }\r\n\r\n    if (validFiles.length > 0) {\r\n      setFiles((prevFiles) => [...prevFiles, ...validFiles]);\r\n    }\r\n  };\r\n\r\n  const handleDrag = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.type === 'dragenter' || e.type === 'dragover') {\r\n      setDragActive(true);\r\n    } else if (e.type === 'dragleave') {\r\n      setDragActive(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n    processFiles(e.dataTransfer.files);\r\n  };\r\n\r\n  const handleFileSelect = (e) => {\r\n    processFiles(e.target.files);\r\n    e.target.value = null; // clear the input value to allow re-selection of the same file\r\n  };\r\n\r\n  const removeFile = (indexToRemove) => {\r\n    setFiles((prevFiles) => {\r\n      const updatedFiles = prevFiles.filter((_, index) => index !== indexToRemove);\r\n      if (updatedFiles.length === 0) {\r\n        handleClear();\r\n      }\r\n      return [...updatedFiles];\r\n    });\r\n    setTimeout(() => setFiles((files) => [...files]), 0);\r\n  };\r\n\r\n  const removeAll = () => {\r\n    handleClear([]);\r\n    setFiles([]);\r\n  };\r\n\r\n  const handleEnlarge = (file) => {\r\n    setEnlargedImage(URL.createObjectURL(file));\r\n  };\r\n\r\n  const handleCloseEnlarged = () => {\r\n    setEnlargedImage(null);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column', overflow: 'hidden' }}>\r\n  \r\n    <Paper\r\n  variant=\"outlined\"\r\n  sx={{\r\n    // p: !singlePage ? 4 : 0,\r\n    p: {\r\n      xs: 1, // Small devices\r\n      md: !singlePage ? 2 : 1, // Medium devices\r\n      lg:  !singlePage ? 4 : 1, // Large devices\r\n      xl: !singlePage? 5:2, // Extra-large devices\r\n    },\r\n    backgroundColor: '#F6F7F8',\r\n    border: `1.5px dashed ${dragActive ? 'primary.main' : 'grey.300'}`,\r\n    borderRadius: '20px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    gap: 0.5,\r\n    cursor: 'pointer',\r\n    // mb: 2,\r\n  }}\r\n  onDragEnter={handleDrag}\r\n  onDragLeave={handleDrag}\r\n  onDragOver={handleDrag}\r\n  onDrop={handleDrop}\r\n>\r\n  <Box sx={{ p: 0, bgcolor: 'primary.50', borderRadius: '50%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n    <CloudUploadIcon sx={{ fontSize: 32, color: 'primary.main' }} />\r\n  </Box>\r\n  <Box sx={{ textAlign: 'center', mb: !singlePage ? 1 : 1 }}>\r\n    <Typography\r\n      variant={singlePage ? 'body1' : 'h6'}\r\n      sx={{\r\n        fontSize: {\r\n          xs: '1rem', // Small devices\r\n          md: '1.125rem', // Medium devices\r\n          lg: load?\"1rem\":'1.125rem', // Large devices\r\n          xl: '1.75rem', // Extra-large devices and above\r\n        },\r\n      }}\r\n    >\r\n      Drop or select file{' '}\r\n      <label style={{ cursor: 'pointer', color: 'blue', textDecoration: 'underline' }}>\r\n        Browse\r\n        <input type=\"file\" hidden multiple onChange={handleFileSelect} />\r\n      </label>\r\n    </Typography>\r\n  {!load && <Typography\r\n    variant={singlePage ? 'body2' : 'body'}\r\n    color=\"text.secondary\"\r\n    sx={{\r\n      fontSize: {\r\n        xs: '0.6rem', // Small devices\r\n        md: '0.5rem', // Medium devices\r\n        lg: '1rem', // Large devices\r\n        xl: '1.125rem', // Extra-large devices and above\r\n      },\r\n    }}\r\n  >\r\n    Limit 200 MB per file. Supported Formats: JPG, JPEG, PNG.\r\n  </Typography>}\r\n  </Box>\r\n</Paper>\r\n\r\n\r\n    <Typography variant=\"h6\" sx={{ padding: '0px', margin: 1,  alignSelf: 'center', textAlign: \"center\", \r\n   }}>\r\n      or\r\n    </Typography>\r\n    <Paper\r\n  variant=\"outlined\"\r\n  sx={{\r\n    backgroundColor: '#F6F7F8',\r\n    border: `1.5px dashed ${dragActive ? 'primary.main' : 'grey.300'}`,\r\n    borderRadius: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    p: {\r\n      xs: 1,\r\n      md: 1,\r\n      lg: !singlePage ? 1 : 0,\r\n      xl: !singlePage ? 2 : 1,\r\n    },\r\n    gap: 0.5,\r\n    cursor: 'pointer',\r\n  }}\r\n>\r\n  <Box sx={{ \r\n    textAlign: 'center', \r\n    width: '100%',\r\n    px: 1 // Add horizontal padding to the Box\r\n  }}>\r\n    <TextField\r\n      size=\"small\"\r\n      placeholder=\"Paste image URL here\"\r\n      fullWidth\r\n      variant=\"standard\"\r\n      value={imageUrl}\r\n      onChange={(e) => setImageUrl(e.target.value)}\r\n      onBlur={handleUrlPaste}\r\n      onKeyPress={(e) => {\r\n        if (e.key === 'Enter') {\r\n          handleUrlPaste(e);\r\n        }\r\n      }}\r\n      InputProps={{\r\n        disableUnderline: true,\r\n        sx: {\r\n          px: 1, // Add padding to the input itself\r\n          width: '100%',\r\n          '& input': {\r\n            width: '100%',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis'\r\n          }\r\n        }\r\n      }}\r\n      sx={{\r\n        width: '100%',\r\n        '& .MuiInputBase-root': {\r\n          borderBottom: 'none',\r\n          width: '100%'\r\n        },\r\n      }}\r\n    />\r\n  </Box>\r\n</Paper>\r\n\r\n    \r\n      {files?.length > 0 && (\r\n  <>\r\n    <Box sx={{ display: 'flex', margin: 1, p: 0, alignItems: 'center', justifyContent: 'flex-end' }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.2 }}>\r\n        <Typography variant=\"body2\">Preview Thumbnail</Typography>\r\n        <Switch size=\"small\" checked={showThumbnail} onChange={(e) => setShowThumbnail(e.target.checked)} />\r\n      </Box>\r\n    </Box>\r\n    <Box sx={{ \r\n      flexGrow:\"unset\",\r\n      \r\n      overflow: 'hidden', \r\n    // backgroundColor: \"yellow\",\r\n    maxHeight:\"100%\",\r\n     }}>\r\n      <Box sx={{ maxHeight: '100%', overflowY: 'auto', p: 1 }}>\r\n        {showThumbnail ? (\r\n          <Stack spacing={1}>\r\n            {/* Thumbnail view code remains the same */}\r\n            {files?.map((file, index) => (\r\n  <Box\r\n    key={index}\r\n    sx={{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      p: 1,\r\n      borderRadius: 1,\r\n      bgcolor: '#f5f5f5',\r\n      position: 'relative'\r\n    }}\r\n  >\r\n    {file.type.startsWith('image/') ? (\r\n      <Box\r\n        component=\"img\"\r\n        src={URL.createObjectURL(file)}\r\n        alt={file.name}\r\n        sx={{\r\n          width: 48,\r\n          height: 48,\r\n          borderRadius: 1,\r\n          objectFit: 'cover',\r\n          mr: 2\r\n        }}\r\n      />\r\n    ) : (\r\n      <Box\r\n        sx={{\r\n          width: 48,\r\n          height: 48,\r\n          borderRadius: 1,\r\n          bgcolor: '#00A76F',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          color: 'white',\r\n          mr: 2\r\n        }}\r\n      >\r\n        <ImageIcon />\r\n      </Box>\r\n    )}\r\n    <Box sx={{ flex: 1, minWidth: 0 }}>\r\n      <Typography \r\n        variant=\"body2\" \r\n        sx={{ \r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n          whiteSpace: 'nowrap'\r\n        }}\r\n      >\r\n        {file.name}\r\n      </Typography>\r\n      <Typography \r\n        variant=\"caption\" \r\n        color=\"text.secondary\"\r\n      >\r\n        {(file.size / (1024 * 1024)).toFixed(2)} MB\r\n      </Typography>\r\n    </Box>\r\n    <Box sx={{ display: 'flex', gap: 1 }}>\r\n      <IconButton\r\n        size=\"small\"\r\n        onClick={() => handleEnlarge(file)}\r\n        sx={{\r\n          color: 'text.secondary',\r\n          '&:hover': {\r\n            color: 'primary.main'\r\n          }\r\n        }}\r\n      >\r\n        <img src={ExpandIcon} alt=\"Expand Logo\" style={{ width: '16px' }} />\r\n      </IconButton>\r\n      <IconButton\r\n        size=\"small\"\r\n        onClick={() => removeFile(index)}\r\n        sx={{\r\n          color: 'text.secondary',\r\n          '&:hover': {\r\n            color: 'error.main'\r\n          }\r\n        }}\r\n      >\r\n        <CloseIcon sx={{ fontSize: 16 }} />\r\n      </IconButton>\r\n    </Box>\r\n  </Box>\r\n))}\r\n          </Stack>\r\n        ) : (\r\n          <Grid container spacing={2}>\r\n            {files?.map((file, index) => (\r\n              <Grid item xs={12} sm={6} md={6} lg={load?6:4}  key={index} sx={{ marginBottom: 2 }}          >\r\n                <Box\r\n                  sx={{\r\n                    position: 'relative',\r\n                    width: '100%',\r\n                    paddingTop: '100%', // This creates a 1:1 aspect ratio\r\n                    borderRadius: 1,\r\n                    overflow: 'hidden',\r\n                  }}\r\n                >\r\n                  {file.type.startsWith('image/') ? (\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={URL.createObjectURL(file)}\r\n                      alt={file.name}\r\n                      sx={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        // maxWidth:\"100%\",\r\n                        height: '100%',\r\n                        objectFit: 'cover',\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <Box\r\n                      sx={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        bgcolor: '#00A76F',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        color: 'white',\r\n                      }}\r\n                    >\r\n                      <ImageIcon sx={{ fontSize: '3rem' }} />\r\n                    </Box>\r\n                  )}\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => removeFile(index)}\r\n                    sx={{\r\n                      position: 'absolute',\r\n                      top: 8,\r\n                      right: 8,\r\n                      color: '#fff',\r\n                      bgcolor: 'rgba(0, 0, 0, 0.5)',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 0, 0, 0.7)',\r\n                      },\r\n                      padding: '4px',\r\n                    }}\r\n                  >\r\n                    <CloseIcon sx={{ fontSize: 16 }} />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => handleEnlarge(file)}\r\n                    sx={{\r\n                      position: 'absolute',\r\n                      bottom: 8,\r\n                      right: 8,\r\n                      color: '#fff',\r\n                      bgcolor: 'rgba(0, 0, 0, 0.5)',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 0, 0, 0.7)',\r\n                      },\r\n                      padding: '4px',\r\n                    }}\r\n                  >\r\n                    <img src={ExpandIcon} alt=\"Expand Logo\" style={{ width: '20px' }} />\r\n                  </IconButton>\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n     <Box \r\n            sx={{\r\n              flexShrink: 0,\r\n              padding: \"10px\",\r\n              backgroundColor: 'inherit',\r\n              textAlign: 'center',\r\n              paddingBottom:2\r\n            }}\r\n          >\r\n           <Button \r\n              onClick={handleFullScreen} \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n         \r\n              disabled={buttonDisable || holdButton}\r\n              startIcon={\r\n                <Box\r\n                  component=\"img\"\r\n                  src={Generate}\r\n                  alt=\"Company Logo\"\r\n                  sx={{\r\n                    width: \"24px\",\r\n                    height: \"24px\",\r\n                  }}\r\n                />\r\n              }\r\n              sx={{\r\n                borderRadius: \"50px\",\r\n                transition: \"opacity 0.3s ease, transform 0.3s ease\",\r\n                opacity: buttonDisable || holdButton ? 0.5 : 1,\r\n                transform: buttonDisable || holdButton ? \"scale(0.95)\" : \"scale(1)\",\r\n                // fontSize: {\r\n                //   md: '0.6rem',     // default for small screens\r\n                //   lg: '1rem',  // larger font for large screens\r\n                //   xl: '1.5rem'    // extra-large font for extra-large screens\r\n                // }\r\n            \r\n            \r\n              }}\r\n            >\r\n              Generate\r\n            </Button>\r\n          </Box>\r\n  </>\r\n)}\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      {!!enlargedImage && (\r\n        <Dialog\r\n          open={true}\r\n          onClose={handleCloseEnlarged}\r\n          maxWidth={false}\r\n          fullWidth\r\n          PaperProps={{\r\n            style: {\r\n              backgroundColor: 'transparent',\r\n              boxShadow: 'none',\r\n              margin: 0,\r\n              width: '30%',\r\n              maxWidth: '30%',\r\n              \r\n            },\r\n          }}\r\n          BackdropProps={{\r\n            style: {\r\n              backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n            },\r\n          }}\r\n        >\r\n          <DialogContent\r\n            className=\"p-0 flex justify-center items-center\"\r\n            style={{\r\n              padding: 0,\r\n              height: '100vh',\r\n              width: '100%',\r\n              maxWidth: '100%',\r\n              maxHeight: '40vh',\r\n              margin: 0,\r\n            }}\r\n          >\r\n            <img\r\n              src={enlargedImage}\r\n              alt=\"Enlarged view\"\r\n              className=\"w-full h-full object-contain\"\r\n              style={{\r\n                width: '90%',\r\n                height: '90%',\r\n              }}\r\n            />\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MultiFileUpload;\r\n\r\n\r\n","// websocket.js\r\n\r\nimport io from 'socket.io-client';\r\n\r\nlet socket = null;\r\n\r\nconst initializeSocket = () => {\r\n  if (!socket) {\r\n    socket = io(\"http://localhost:8000\", {\r\n      withCredentials: true,\r\n      transports: ['websocket', 'polling'],\r\n      path: '/socket.io'\r\n    });\r\n  }\r\n  return socket;\r\n};\r\n\r\nconst emitImageAnalysis = async (Data, selectedModel, setLoader, setHoldButton) => {\r\n  try {\r\n    const socket = initializeSocket();\r\n    const formData = new FormData();\r\n    const payload = {\r\n      model: selectedModel?.Id,\r\n      images: [],\r\n      image_urls: [],\r\n    };\r\n\r\n    if (Data && Array.isArray(Data)) {\r\n      for (const file of Data) {\r\n        formData.append(\"images\", file); // Append each file as a blob\r\n      }\r\n    }\r\n    for (let key of formData.getAll(\"images\")) {\r\n      payload.images.push(key);\r\n    }\r\n    \r\n    // if (Data && Array.isArray(Data)) {\r\n    //   Data.forEach((file) => {\r\n    //     formData.append('images', file);\r\n    //     payload.images.push(file);\r\n    //   });\r\n    // }\r\n    \r\n    // formData.append('model', \"openai\");  \r\n    // formData.append('model', selectedModel?.Id);\r\n      // if (Data && Array.isArray(Data)) {\r\n      //   for (const file of Data) {\r\n      //     const base64Image = await new Promise((resolve, reject) => {\r\n      //       const reader = new FileReader();\r\n      //       reader.readAsDataURL(file);\r\n      //       reader.onload = () => resolve(reader.result.split(\",\")[1]);\r\n      //       reader.onerror = (error) => reject(error);\r\n      //     });\r\n      //     // payload.images.push(base64Image);\r\n      //   }\r\n      // }\r\n\r\n    setLoader(true);\r\n    setHoldButton(true);\r\n\r\n    socket.emit(\"analyze\", payload);\r\n\r\n  } catch (error) {\r\n    console.error(\"Failed to emit image analysis:\", error.message);\r\n    setLoader(false);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\nconst setupStreamHandlers = (setSocketConnection, setStreamData, setLoader, handleHoldButton) => {\r\n  const socket = initializeSocket();\r\n\r\n  // Remove existing listeners\r\n  socket.removeAllListeners();\r\n\r\n  socket.on(\"stream_start\", (data) => {\r\n    console.log(\"Stream started:\", data.message);\r\n    setStreamData([]); // Reset stream data at start\r\n  });\r\n\r\n  socket.on(\"chunk\", (data) => {\r\n    console.log(\"Received chunk:\", data.data);\r\n    setSocketConnection(true);\r\n    // Update stream data immediately with new chunk\r\n    setLoader(false)\r\n    setStreamData(prevData => {\r\n      const newData = [...prevData, data.data];\r\n      return newData;\r\n    });\r\n  });\r\n\r\n  socket.on(\"completed\", (data) => {\r\n    console.log(\"Analysis completed:\", data.message);\r\n    setLoader(false);\r\n  });\r\n\r\n  socket.on(\"stream_end\", (data) => {\r\n    console.log(\"Stream ended:\", data.message);\r\n\r\n    \r\n    setStreamData(prevData => [...prevData, \"\"]);\r\n    setSocketConnection(false);\r\n    socket.removeAllListeners();\r\n    setTimeout(()=>{\r\n      setLoader(false); \r\n      handleHoldButton()\r\n    }, 1500)\r\n  });\r\n\r\n  socket.on(\"error\", (data) => {\r\n    console.error(\"Error received:\", data.message);\r\n    setLoader(false);\r\n  });\r\n\r\n  return () => {\r\n    socket.removeAllListeners();\r\n  };\r\n};\r\n\r\nexport { initializeSocket, emitImageAnalysis, setupStreamHandlers };","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Autocomplete,\r\n  TextField,\r\n  Card,\r\n  CardContent,\r\n  Stack,\r\n  // useMediaQuery,\r\n} from \"@mui/material\";\r\nimport View from \"./View\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport MultiFileUpload from \"./MultiFileUpload\";\r\nimport AutoAwesomeIcon from \"@mui/icons-material/AutoAwesome\";\r\nimport Logo from \"./../assets/images/logo.png\";\r\nimport Generate from \"./../assets/images/generate.png\";\r\nimport BackImage from \"./../assets/images/upload-png.png\";\r\nimport { io } from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport jsPDF from \"jspdf\";\r\nimport { marked } from \"marked\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { PDFDocument } from \"pdf-lib\"; // To merge PDF files\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\r\nimport { emitImageAnalysis, setupStreamHandlers } from \"./websocket\";\r\n\r\nconst Home = () => {\r\n  const [loader, setLoader] = useState(true);\r\n  const list = [\r\n    // { name: \"Claude-3.5-Sonnet\", Id: \"claude\" },\r\n    { name: \"GPT-4o\", Id: \"openai\" },\r\n    // { name: \"Gemini-1.5-flash\", Id: \"gemini\" },\r\n\r\n    // { name: \"GPT 3\", Id: \"3\" }\r\n  ];\r\n  const [count, setCount] = useState(1);\r\n\r\n  const [fullScreen, setFullScreen] = useState(false);\r\n  const [selectedModel, setSelectedModel] = useState(list[0]);\r\n  const [filesData, setFilesData] = useState([]);\r\n  const [socketTrue, setSocketTrue] = useState(false);\r\n  const [streamData, setStreamData] = useState([]);\r\n  const [socketConnection, setSocketConnection] = useState(false);\r\n  const [claudeResponse, setClaudeResponse] = useState(\"\");\r\n  const socketRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n  const bottomRef = useRef(null)\r\n  const wsRef = useRef(null);\r\n\r\n  const isConnectedRef = useRef(false);\r\n  console.log(streamData, fullScreen, \"suruuu\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  // const [holdButton, setHoldButton] = useState(false);\r\n\r\n  //sayali code ends\r\n  const [firstUpload, setFirstUpload] = useState(false);\r\n  const handleFullScreen = async () => {\r\n    setFullScreen(true);\r\n    setSocketTrue(true);\r\n    setCount(fullScreen ? count + 1 : 0);\r\n\r\n    try {\r\n      // Then initialize socket connection\r\n      //  await initializeSocket();\r\n      // First make the initial API call\r\n      await handleApiCallSocket(filesData);\r\n\r\n      // Then initialize socket connection\r\n      //    initializeSocket();\r\n    } catch (error) {\r\n      console.error(\"Error in handleFullScreen:\", error);\r\n    }\r\n  };\r\n  const [buttonDisable, setButtonDisable] = useState(true);\r\n  console.log(\"llllllll\", buttonDisable, filesData);\r\n  const handleImageData = (data) => {\r\n    if (data && data?.length > 0) {\r\n      setButtonDisable(false);\r\n      console.log(\"lllllllllllkkk\", buttonDisable, data?.length);\r\n      if (!fullScreen) {\r\n        setFirstUpload(true);\r\n      }\r\n      console.log(fullScreen, firstUpload, \"fullScreen\");\r\n    }\r\n\r\n    console.log(\"lllllllllll\", buttonDisable, data?.length);\r\n    setFilesData(data);\r\n  };\r\n  const handleClearData = (data) => {\r\n    console.log(data, \"llllmmmmm\");\r\n    setFilesData([]);\r\n    setButtonDisable(true);\r\n  };\r\n  const [holdButton, setHoldButton] = useState(false);\r\n  console.log(holdButton, buttonDisable, \"buttonDisable\");\r\n  const handleHoldButton = () => {\r\n    setHoldButton(false);\r\n  };\r\n\r\n  // Set up stream handlers when component mounts\r\n  useEffect(() => {\r\n    const cleanup = setupStreamHandlers(\r\n      setSocketConnection,\r\n      setStreamData,\r\n      setLoader, handleHoldButton\r\n    );\r\n    return () => {\r\n      if (cleanup) cleanup();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (bottomRef.current) {\r\n        bottomRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    }, [streamData]);\r\n\r\n  // Handler for when user clicks to analyze image\r\n  const handleApiCallSocket = async (Data) => {\r\n    await emitImageAnalysis(Data, selectedModel, setLoader, setHoldButton);\r\n  };\r\n\r\n  async function convertSvgToPng(dataUrl) {\r\n    return new Promise((resolve, reject) => {\r\n      const img = new Image();\r\n      img.src = dataUrl;\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n        resolve(canvas.toDataURL(\"image/png\"));\r\n      };\r\n      img.onerror = reject;\r\n    });\r\n  }\r\n\r\n  // versionv3\r\n  // Helper function to render markdown as an image with larger text\r\n  const renderMarkdownToImage = async (markdownText) => {\r\n    // Convert markdown to HTML\r\n    const htmlContent = marked(markdownText);\r\n\r\n    // Create a hidden div to render the HTML content\r\n    const container = document.createElement(\"div\");\r\n    container.innerHTML = htmlContent;\r\n\r\n    // Apply some styling to the container to increase font size\r\n    container.style.position = \"absolute\";\r\n    container.style.left = \"-9999px\"; // Hide it offscreen\r\n    container.style.fontSize = \"18px\"; // Increase text size\r\n    container.style.lineHeight = \"1.6\"; // Adjust line height for readability\r\n    container.style.fontFamily = \"Arial, sans-serif\"; // Use a common font\r\n    container.style.width = \"100%\"; // Allow it to stretch to fit the content\r\n\r\n    // Append to the body temporarily to render\r\n    document.body.appendChild(container);\r\n\r\n    // Render the container as an image\r\n    const canvas = await html2canvas(container);\r\n    document.body.removeChild(container); // Clean up after rendering\r\n    return canvas.toDataURL(\"image/png\");\r\n  };\r\n\r\n  // Function to read file as data URL\r\n  async function readFileAsDataUrl(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = reject;\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }\r\n\r\n  const downloadPDF = async () => {\r\n    try {\r\n      const pdf = new jsPDF();\r\n      const pageHeight = pdf.internal.pageSize.height;\r\n      const pageWidth = pdf.internal.pageSize.width;\r\n      const margin = 10; // Margin around the content\r\n      let yOffset = margin;\r\n\r\n      // 1. Add images to the PDF\r\n      for (let i = 0; i < filesData.length; i++) {\r\n        const file = filesData[i];\r\n        const fileType = file.type;\r\n\r\n        if (fileType.startsWith(\"image/\")) {\r\n          let dataUrl;\r\n\r\n          if (fileType === \"image/svg+xml\") {\r\n            dataUrl = await convertSvgToPng(await readFileAsDataUrl(file));\r\n          } else {\r\n            dataUrl = await readFileAsDataUrl(file);\r\n          }\r\n\r\n          const img = new Image();\r\n          await new Promise((resolve, reject) => {\r\n            img.onload = resolve;\r\n            img.onerror = reject;\r\n            img.src = dataUrl;\r\n          });\r\n\r\n          // Calculate dimensions without enlarging images\r\n          const imgAspectRatio = img.width / img.height;\r\n          const maxImgWidth = pageWidth - 2 * margin;\r\n          const imgWidth = Math.min(img.width, maxImgWidth);\r\n          const imgHeight = imgWidth / imgAspectRatio;\r\n\r\n          if (yOffset + imgHeight > pageHeight - margin) {\r\n            pdf.addPage();\r\n            yOffset = margin;\r\n          }\r\n\r\n          pdf.addImage(dataUrl, \"JPEG\", margin, yOffset, imgWidth, imgHeight);\r\n          yOffset += imgHeight + margin;\r\n        } else if (fileType === \"application/pdf\") {\r\n          const existingPdfBytes = await file.arrayBuffer();\r\n          const existingPdf = await PDFDocument.load(existingPdfBytes);\r\n          const copiedPages = await pdf.copyPages(\r\n            existingPdf,\r\n            existingPdf.getPageIndices()\r\n          );\r\n\r\n          copiedPages.forEach((page) => {\r\n            pdf.addPage(page);\r\n          });\r\n        }\r\n      }\r\n\r\n      // 2. Render markdown content as image and add it to PDF\r\n      if (streamData) {\r\n        const markdownString = streamData.join(\"\"); // Combine the array into a single string\r\n        const markdownImage = await renderMarkdownToImage(markdownString);\r\n      \r\n\r\n        // Add a new page if necessary for the markdown content\r\n        if (yOffset + pageHeight > pageHeight - margin) {\r\n          pdf.addPage();\r\n          yOffset = margin;\r\n        }\r\n\r\n        // Add markdown image to the PDF\r\n        pdf.addImage(\r\n          markdownImage,\r\n          \"PNG\",\r\n          margin,\r\n          yOffset,\r\n          pageWidth - 2 * margin,\r\n          0\r\n        );\r\n      }\r\n\r\n      // Save the PDF\r\n      pdf.save(`Visual_assessment_report_with_${selectedModel?.name}.pdf`);\r\n    } catch (error) {\r\n      console.error(\"Error generating PDF:\", error);\r\n      alert(\"Error generating PDF. Please check your files and try again.\");\r\n    }\r\n  };\r\n\r\n  // Rest of your component JSX remains the same...\r\n  return (\r\n    <Box sx={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}>\r\n      {/* Fixed Header */}\r\n      <Box\r\n        sx={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: \"60px\",\r\n          zIndex: 1000,\r\n          backgroundColor: \"white\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          padding: \"0 20px\",\r\n        }}\r\n      >\r\n        <img\r\n          src={Logo}\r\n          alt=\"Company Logo\"\r\n          style={{\r\n            width: \"150px\",\r\n          }}\r\n        />\r\n      </Box>\r\n\r\n      {/* Main Content Area */}\r\n      <Box\r\n        sx={{\r\n          flexGrow: 1,\r\n          marginTop: \"60px\",\r\n          backgroundImage: `url(${BackImage})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          height: \"calc(100vh - 60px)\",\r\n          overflow: \"hidden\",\r\n          // flexDirection: useMediaQuery(\"(max-width: 600px)\") ? \"column\" : \"row\", \r\n        }}\r\n      >\r\n        {/* Left Panel */}\r\n        <Box\r\n          sx={{\r\n            padding: fullScreen ? 1 : 1,\r\n            // mt: fullScreen ? 4 : 0,\r\n            // height: useMediaQuery(\"(max-width: 600px)\") ? \"auto\" : \"100%\", \r\n            width: fullScreen ? \"30%\" : \"40%\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          {/* Fixed Content Area */}\r\n          <Box sx={{ flexShrink: 0 }}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{\r\n                fontWeight: 535,\r\n                fontFamily: \"Roboto, sans-serif\",\r\n                fontSize: fullScreen ? \"25px\" : \"30px\",\r\n                // fontSize: {\r\n                //       // medium screen size\r\n                //   xl: \"35px\",      // extra-large screen size\r\n                // },\r\n                // marginBottom: 1\r\n              }}\r\n            >\r\n              Way.com Visual Assessment Tool\r\n            </Typography>\r\n\r\n            {/* <Autocomplete\r\n              size=\"small\"\r\n              disableClearable\r\n              options={list}\r\n              getOptionLabel={(option) => option.name}\r\n              value={selectedModel}\r\n              onChange={(event, newValue) => {\r\n                setSelectedModel(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    sx: {\r\n                      borderRadius: \"30px\",\r\n                      width: fullScreen ? \"53%\" : \"40%\",\r\n                      marginTop: 2,\r\n                      marginBottom: 0.8,\r\n                      backgroundColor: \"black\",\r\n                      color: \"white\",\r\n                      \"& .MuiSvgIcon-root\": {\r\n                        color: \"white\",\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n              )}\r\n            /> */}\r\n            <Button  variant=\"contained\"\r\n                    sx= {{\r\n                      cursor:\"text\",\r\n                      borderRadius: \"30px\",\r\n                      width: fullScreen ? \"53%\" : \"40%\",\r\n                      marginTop: 2,\r\n                      textAlign:\"left\",\r\n                      justifyContent:\"flex-start\",\r\n                      marginBottom: 0.8,\r\n                      backgroundColor: \"black\" ,\r\n                      color: \"white\",\r\n                      textTransform: \"none\",\r\n                      \"& .MuiSvgIcon-root\": {\r\n                        color: \"white\",\r\n                      },\r\n                      \"&:hover\":{\r\n                        backgroundColor:\"black\"\r\n                      }\r\n\r\n                    }}\r\n                  >GPT-4o</Button>\r\n          </Box>\r\n\r\n          {/* Scrollable Upload Area */}\r\n          <Box\r\n            sx={{\r\n              marginTop: !firstUpload ? 3 : 1,\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              overflow: \"hidden\",\r\n              // backgroundColor: \"green\",\r\n              height: 0,\r\n            }}\r\n          >\r\n            <MultiFileUpload\r\n              handleData={handleImageData}\r\n              load={fullScreen}\r\n              singlePage={firstUpload}\r\n              handleClear={handleClearData}\r\n              holdButton={holdButton}\r\n              handleFullScreen={handleFullScreen}\r\n              buttonDisable={buttonDisable}\r\n            />\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Right Panel */}\r\n        {fullScreen && (\r\n          <Box\r\n            sx={{\r\n              padding: 0.7,\r\n              pb: 3,\r\n              // height: useMediaQuery(\"(max-width: 600px)\") ? \"auto\" : \"100%\", \r\n              width: \"65%\",\r\n              height: \"100%\",\r\n              // overflowY: \"auto\", \r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                position: \"fixed\",\r\n                top: \"80px\",\r\n                right: \"20px\",\r\n                bottom: \"20px\",\r\n                width: \"65%\",\r\n                \r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <Card\r\n                sx={{\r\n                  height: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  margin: \"0\",\r\n                  borderRadius: \"20px\",\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    flex: 1,\r\n                    overflowY: \"auto\",\r\n                    minHeight: 0,\r\n                    paddingBottom: \"72px\", // Increased padding to account for button height + padding\r\n                    \"&::-webkit-scrollbar\": {\r\n                      width: \"8px\",\r\n                    },\r\n                    \"&::-webkit-scrollbar-track\": {\r\n                      background: \"#f1f1f1\",\r\n                    },\r\n                    \"&::-webkit-scrollbar-thumb\": {\r\n                      background: \"#888\",\r\n                      borderRadius: \"4px\",\r\n                    },\r\n                    \"&::-webkit-scrollbar-thumb:hover\": {\r\n                      background: \"#555\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <CardContent>\r\n                    {loader ? (\r\n                      <Stack spacing={2} sx={{ pt: 2 }}>\r\n                        <Skeleton width=\"50%\" height={30} />\r\n                        <Skeleton width=\"75%\" height={20} animation=\"wave\" />\r\n                        <Skeleton width=\"83%\" height={20} animation={false} />\r\n                        <Skeleton width=\"67%\" height={25} animation=\"wave\" />\r\n                        <Skeleton width=\"100%\" height={22} animation={false} />\r\n                        <Skeleton width=\"100%\" height={21} animation=\"wave\" />\r\n                        <Skeleton width=\"90%\" height={22} animation={false} />\r\n                        <Skeleton width=\"85%\" height={21} animation=\"wave\" />\r\n                        <Skeleton width=\"95%\" height={22} animation={false} />\r\n                        <Skeleton width=\"80%\" height={21} animation=\"wave\" />\r\n                      </Stack>\r\n                    ) : (\r\n                      <>\r\n                      \r\n                          <ReactMarkdown\r\n                            children={streamData.join(\"\")}\r\n                            remarkPlugins={[remarkGfm]}\r\n                          />\r\n                   \r\n                        <div ref={bottomRef} />\r\n                      </>\r\n                    )}\r\n                  </CardContent>\r\n                </Box>\r\n\r\n                {!isTyping && !loader && (\r\n                  <Box\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      bottom: 0,\r\n                      left: 0,\r\n                      right: 0,\r\n                      borderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n                      p: 2,\r\n                      backgroundColor: \"white\",\r\n                      boxShadow: \"0px -4px 6px -1px rgba(0, 0, 0, 0.1)\",\r\n                      borderBottomLeftRadius: \"20px\",\r\n                      borderBottomRightRadius: \"20px\",\r\n                      gap: 1,\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={downloadPDF}\r\n                      sx={{\r\n                        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                      }}\r\n                    >\r\n                      <FileDownloadIcon sx={{ marginRight: 1 }} />\r\n                      Download Report\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Card>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_ref","handleData","load","handleClear","singlePage","buttonDisable","handleFullScreen","holdButton","files","setFiles","useState","showThumbnail","setShowThumbnail","dragActive","setDragActive","error","setError","imageUrl","setImageUrl","enlargedImage","setEnlargedImage","console","log","useEffect","handleUrlPaste","async","_e$target","_e$target2","e","target","value","url","trim","file","response","fetch","blob","fileName","substring","lastIndexOf","File","type","Error","createFileFromUrl","isDuplicateFile","name","setTimeout","prevFiles","newFile","some","existingFile","size","processFiles","newFiles","duplicates","validFiles","Array","from","forEach","push","length","join","handleDrag","preventDefault","stopPropagation","removeFile","indexToRemove","updatedFiles","filter","_","index","handleEnlarge","URL","createObjectURL","_jsxs","Box","sx","height","display","flexDirection","overflow","children","Paper","variant","p","xs","md","lg","xl","backgroundColor","border","borderRadius","alignItems","gap","cursor","onDragEnter","onDragLeave","onDragOver","onDrop","dataTransfer","_jsx","bgcolor","justifyContent","CloudUploadIcon","fontSize","color","textAlign","mb","Typography","style","textDecoration","hidden","multiple","onChange","padding","margin","alignSelf","width","px","TextField","placeholder","fullWidth","onBlur","onKeyPress","key","InputProps","disableUnderline","textOverflow","borderBottom","_Fragment","Switch","checked","flexGrow","maxHeight","overflowY","Stack","spacing","map","position","startsWith","component","src","alt","objectFit","mr","ImageIcon","flex","minWidth","whiteSpace","toFixed","IconButton","onClick","ExpandIcon","CloseIcon","Grid","container","item","sm","marginBottom","paddingTop","top","left","right","bottom","flexShrink","paddingBottom","Button","disabled","startIcon","transition","opacity","transform","Alert","severity","onClose","Dialog","open","handleCloseEnlarged","maxWidth","PaperProps","boxShadow","BackdropProps","DialogContent","className","socket","initializeSocket","io","withCredentials","transports","path","Home","loader","setLoader","count","setCount","fullScreen","setFullScreen","selectedModel","setSelectedModel","Id","filesData","setFilesData","socketTrue","setSocketTrue","streamData","setStreamData","socketConnection","setSocketConnection","claudeResponse","setClaudeResponse","bottomRef","useRef","loading","setLoading","isTyping","setIsTyping","firstUpload","setFirstUpload","setButtonDisable","setHoldButton","handleHoldButton","cleanup","setupStreamHandlers","removeAllListeners","on","data","message","prevData","current","scrollIntoView","behavior","handleApiCallSocket","Data","formData","FormData","payload","model","images","image_urls","isArray","append","getAll","emit","emitImageAnalysis","convertSvgToPng","dataUrl","Promise","resolve","reject","img","Image","onload","canvas","document","createElement","getContext","drawImage","toDataURL","onerror","readFileAsDataUrl","reader","FileReader","result","readAsDataURL","zIndex","Logo","marginTop","backgroundImage","BackImage","backgroundSize","backgroundPosition","backgroundRepeat","fontWeight","fontFamily","textTransform","MultiFileUpload","pb","Card","minHeight","background","CardContent","pt","Skeleton","animation","ReactMarkdown","remarkPlugins","remarkGfm","ref","borderTop","borderBottomLeftRadius","borderBottomRightRadius","pdf","jsPDF","pageHeight","internal","pageSize","pageWidth","yOffset","i","fileType","imgAspectRatio","maxImgWidth","imgWidth","Math","min","imgHeight","addPage","addImage","existingPdfBytes","arrayBuffer","existingPdf","PDFDocument","copyPages","getPageIndices","page","markdownString","markdownImage","htmlContent","marked","markdownText","innerHTML","lineHeight","body","appendChild","html2canvas","removeChild","renderMarkdownToImage","save","alert","FileDownloadIcon","marginRight"],"sourceRoot":""}